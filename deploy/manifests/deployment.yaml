---
apiVersion: v1
kind: Namespace
metadata:
  name: personal-website
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: frontend-deploy
  namespace: personal-website
  labels:
    app: frontend
spec:
  replicas: 1
  selector:
    matchLabels:
      app: frontend
  template:
    metadata:
      labels:
        app: frontend
    spec:
      imagePullSecrets:
        - name: ${PULL_SECRET_NAME}
      containers:
        - name: frontend
          image: ${FRONTEND_IMAGE_REPOSITORY}:${FRONTEND_IMAGE_TAG}
          ports:
            - name: http
              containerPort: 3000
          env:
            - name: PORT
              value: "3000"
          resources:
            requests:
              memory: "256Mi"
              cpu: "100m"
            limits:
              memory: "512Mi"
              cpu: "500m"
---
apiVersion: v1
kind: Service
metadata:
  name: frontend-svc
  namespace: personal-website
  labels:
    service: frontend
spec:
  type: ClusterIP
  ports:
    - name: http
      port: 80
      targetPort: ${FRONTEND_PORT}
      protocol: TCP
  selector:
    app: frontend
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: frontend-ingress
  namespace: personal-website
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
    cert-manager.io/cluster-issuer: letsencrypt-prod
spec:
  ingressClassName: nginx
  tls:
    - hosts:
        - ${FRONTEND_DOMAIN}
      secretName: frontend-tls
  rules:
    - host: ${FRONTEND_DOMAIN}
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: frontend-svc
                port:
                  number: 80
